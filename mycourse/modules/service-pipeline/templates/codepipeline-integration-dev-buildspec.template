version: 0.2
env:
  variables:
    CONTAINER_NAME: course1-integration
    ECR_REPO: course1-integration-dev-repo
  parameter-store:
    AWS_ACCOUNT_ID: ACCOUNT_ID
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      #- go dev
      #- aws s3 cp s3://course1-course1-s3-environment-dev/course1-integration/env-dev ./.env
      #- aws s3 cp s3://course1-course1-s3-environment-dev/course1-integration/serviceAccountKey.json ./serviceAccountKey.json
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image... 
      - docker build -t course1-integration-dev-repo .
      - docker tag course1-integration-dev-repo:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/course1-integration-dev-repo:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/course1-integration-dev-repo:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - echo Writing image definitions file...
      - echo $CONTAINER_NAME
      - echo $ECR_REPO
      - printf '[{"name":"%s","imageUri":"%s.dkr.ecr.%s.amazonaws.com/%s:latest"}]' "$CONTAINER_NAME" "$AWS_ACCOUNT_ID" "$AWS_DEFAULT_REGION" "$ECR_REPO" > imagedefinitions.json
      - echo imagedefinitions.json
artifacts:
    files: imagedefinitions.json
