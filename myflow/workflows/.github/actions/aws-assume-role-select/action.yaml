name: Select AWS profile to assume
description: This action will be used for assuming specific AWS profiles under regions specified by users

inputs:
  aws_region:
    required: true
    default: us-west-2
    description: This input value specifies the region associated to the IAM profile
  profile_name:
    required: true
    default: course1-non-prod
    description: This input value specifies the IAM profile that needs to be assumed
  

runs: 
  using: "composite"
  steps: 
    - name: Set the account details
      shell: bash
      run: |
          if [[ ${{ inputs.profile_name }} == "course1-prod" ]]; then
            echo "AWS_ACCOUNT_ID=" >> $GITHUB_ENV
          elif [[ ${{ inputs.profile_name }} == "course1-non-prod" ]]; then
            echo "AWS_ACCOUNT_ID=" >> $GITHUB_ENV
          elif [[ ${{ inputs.profile_name }} == "sc-course1-prod" ]]; then
            echo "AWS_ACCOUNT_ID=" >> $GITHUB_ENV
          elif [[ ${{ inputs.profile_name }} == "sc-course1-non-prod" ]]; then
            echo "AWS_ACCOUNT_ID=" >> $GITHUB_ENV
          elif [[ ${{ inputs.profile_name }} == "course1-prod" ]]; then
            echo "AWS_ACCOUNT_ID=" >> $GITHUB_ENV
          fi
   
    - name: Assume the role
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/git-actions-terraform
        role-session-name: GitActionDeployment-terraform
      

    - name: Configuring profile for the assumed role
      shell: bash
      run: |
          aws configure set region ${{ inputs.aws_region }} --profile ${{ inputs.profile_name }}
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile ${{ inputs.profile_name }}
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile ${{ inputs.profile_name }}
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile ${{ inputs.profile_name }}
          aws sts get-caller-identity --profile ${{ inputs.profile_name }}